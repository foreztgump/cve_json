{
    "id": "CVE-2025-30204",
    "product": "jwt",
    "version": ">= 3.2.0, < 4.5.2 ",
    "vulnerability": [
        "CWE-405: Asymmetric Resource Consumption (Amplification)"
    ],
    "description": "golang-jwt is a Go implementation of JSON Web Tokens. Starting in version 3.2.0 and prior to versions 5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer  followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/11notes/docker-github-runner",
            "https://github.com/ARPSyndicate/cve-scores",
            "https://github.com/fkie-cad/nvd-json-data-feeds",
            "https://github.com/patrickdappollonio/patrickdappollonio",
            "https://github.com/runwhen-contrib/helm-charts"
        ]
    }
}