{
    "id": "CVE-2025-39947",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:net/mlx5e: Harden uplink netdev access against device unbindThe function mlx5_uplink_netdev_get() gets the uplink netdevicepointer from mdev->mlx5e_res.uplink_netdev. However, the netdevice canbe removed and its pointer cleared when unbound from the mlx5_core.ethdriver. This results in a NULL pointer, causing a kernel panic. BUG: unable to handle page fault for address: 0000000000001300 at RIP: 0010:mlx5e_vport_rep_load+0x22a/0x270 [mlx5_core] Call Trace:  <TASK>  mlx5_esw_offloads_rep_load+0x68/0xe0 [mlx5_core]  esw_offloads_enable+0x593/0x910 [mlx5_core]  mlx5_eswitch_enable_locked+0x341/0x420 [mlx5_core]  mlx5_devlink_eswitch_mode_set+0x17e/0x3a0 [mlx5_core]  devlink_nl_eswitch_set_doit+0x60/0xd0  genl_family_rcv_msg_doit+0xe0/0x130  genl_rcv_msg+0x183/0x290  netlink_rcv_skb+0x4b/0xf0  genl_rcv+0x24/0x40  netlink_unicast+0x255/0x380  netlink_sendmsg+0x1f3/0x420  __sock_sendmsg+0x38/0x60  __sys_sendto+0x119/0x180  do_syscall_64+0x53/0x1d0  entry_SYSCALL_64_after_hwframe+0x4b/0x53Ensure the pointer is valid before use by checking it for NULL. If itis valid, immediately call netdev_hold() to take a reference, andpreventing the netdevice from being freed while it is in use.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/fkie-cad/nvd-json-data-feeds"
        ]
    }
}