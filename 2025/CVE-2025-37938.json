{
    "id": "CVE-2025-37938",
    "product": "Linux",
    "version": "5013f454a352cce8e62162976026a9c472595e42< 6854c87ac823181c810f8c07489ba543260c0023 ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:tracing: Verify event formats that have \"%*p..\"The trace event verifier checks the formats of trace events to make surethat they do not point at memory that is not in the trace event itself orin data that will never be freed. If an event references data that wasallocated when the event triggered and that same data is freed before theevent is read, then the kernel can crash by reading freed memory.The verifier runs at boot up (or module load) and scans the print formatsof the events and checks their arguments to make sure that dereferencedpointers are safe. If the format uses \"%*p..\" the verifier will ignore it,and that could be dangerous. Cover this case as well.Also add to the sample code a use case of \"%*pbl\".",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/runwhen-contrib/helm-charts"
        ]
    }
}