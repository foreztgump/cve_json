{
    "id": "CVE-2025-38513",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:wifi: zd1211rw: Fix potential NULL pointer dereference in zd_mac_tx_to_dev()There is a potential NULL pointer dereference in zd_mac_tx_to_dev(). Forexample, the following is possible:    \tT0\t\t\t    \t\tT1zd_mac_tx_to_dev()  /* len == skb_queue_len(q) */  while (len > ZD_MAC_MAX_ACK_WAITERS) {\t\t\t\t\t  filter_ack()\t\t\t\t\t    spin_lock_irqsave(&q->lock, flags);\t\t\t\t\t    /* position == skb_queue_len(q) */\t\t\t\t\t    for (i=1; i<position; i++)\t\t\t\t    \t      skb = __skb_dequeue(q)\t\t\t\t\t    if (mac->type == NL80211_IFTYPE_AP)\t\t\t\t\t      skb = __skb_dequeue(q);\t\t\t\t\t    spin_unlock_irqrestore(&q->lock, flags);    skb_dequeue() -> NULLSince there is a small gap between checking skb queue length and skb beingunconditionally dequeued in zd_mac_tx_to_dev(), skb_dequeue() can return NULL.Then the pointer is passed to zd_mac_tx_status() where it is dereferenced.In order to avoid potential NULL pointer dereference due to situations likeabove, check if skb is not NULL before passing it to zd_mac_tx_status().Found by Linux Verification Center (linuxtesting.org) with SVACE.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}