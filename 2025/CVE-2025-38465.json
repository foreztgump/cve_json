{
    "id": "CVE-2025-38465",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:netlink: Fix wraparounds of sk->sk_rmem_alloc.Netlink has this pattern in some places  if (atomic_read(&sk->sk_rmem_alloc) > sk->sk_rcvbuf)  \tatomic_add(skb->truesize, &sk->sk_rmem_alloc);, which has the same problem fixed by commit 5a465a0da13e (\"udp:Fix multiple wraparounds of sk->sk_rmem_alloc.\").For example, if we set INT_MAX to SO_RCVBUFFORCE, the conditionis always false as the two operands are of int.Then, a single socket can eat as many skb as possible until OOMhappens, and we can see multiple wraparounds of sk->sk_rmem_alloc.Let's fix it by using atomic_add_return() and comparing the twovariables as unsigned int.Before:  [root@fedora ~]# ss -f netlink  Recv-Q      Send-Q Local Address:Port                Peer Address:Port  -1668710080 0               rtnl:nl_wraparound/293               *After:  [root@fedora ~]# ss -f netlink  Recv-Q     Send-Q Local Address:Port                Peer Address:Port  2147483072 0               rtnl:nl_wraparound/290               *  ^  `--- INT_MAX - 576",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}