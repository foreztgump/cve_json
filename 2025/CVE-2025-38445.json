{
    "id": "CVE-2025-38445",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:md/raid1: Fix stack memory use after return in raid1_reshapeIn the raid1_reshape function, newpool isallocated on the stack and assigned to conf->r1bio_pool.This results in conf->r1bio_pool.wait.head pointingto a stack address.Accessing this address later can lead to a kernel panic.Example access path:raid1_reshape(){\t// newpool is on the stack\tmempool_t newpool, oldpool;\t// initialize newpool.wait.head to stack address\tmempool_init(&newpool, ...);\tconf->r1bio_pool = newpool;}raid1_read_request() or raid1_write_request(){\talloc_r1bio()\t{\t\tmempool_alloc()\t\t{\t\t\t// if pool->alloc fails\t\t\tremove_element()\t\t\t{\t\t\t\t--pool->curr_nr;\t\t\t}\t\t}\t}}mempool_free(){\tif (pool->curr_nr < pool->min_nr) {\t\t// pool->wait.head is a stack address\t\t// wake_up() will try to access this invalid address\t\t// which leads to a kernel panic\t\treturn;\t\twake_up(&pool->wait);\t}}Fix:reinit conf->r1bio_pool.wait after assigning newpool.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}