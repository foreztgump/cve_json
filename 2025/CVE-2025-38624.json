{
    "id": "CVE-2025-38624",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:PCI: pnv_php: Clean up allocated IRQs on unplugWhen the root of a nested PCIe bridge configuration is unplugged, thepnv_php driver leaked the allocated IRQ resources for the child bridges'hotplug event notifications, resulting in a panic.Fix this by walking all child buses and deallocating all its IRQ resourcesbefore calling pci_hp_remove_devices().Also modify the lifetime of the workqueue at struct pnv_php_slot::wq sothat it is only destroyed in pnv_php_free_slot(), instead ofpnv_php_disable_irq(). This is required since pnv_php_disable_irq() willnow be called by workers triggered by hot unplug interrupts, so theworkqueue needs to stay allocated.The abridged kernel panic that occurs without this patch is as follows:  WARNING: CPU: 0 PID: 687 at kernel/irq/msi.c:292 msi_device_data_release+0x6c/0x9c  CPU: 0 UID: 0 PID: 687 Comm: bash Not tainted 6.14.0-rc5+ #2  Call Trace:   msi_device_data_release+0x34/0x9c (unreliable)   release_nodes+0x64/0x13c   devres_release_all+0xc0/0x140   device_del+0x2d4/0x46c   pci_destroy_dev+0x5c/0x194   pci_hp_remove_devices+0x90/0x128   pci_hp_remove_devices+0x44/0x128   pnv_php_disable_slot+0x54/0xd4   power_write_file+0xf8/0x18c   pci_slot_attr_store+0x40/0x5c   sysfs_kf_write+0x64/0x78   kernfs_fop_write_iter+0x1b0/0x290   vfs_write+0x3bc/0x50c   ksys_write+0x84/0x140   system_call_exception+0x124/0x230   system_call_vectored_common+0x15c/0x2ec[bhelgaas: tidy comments]",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}