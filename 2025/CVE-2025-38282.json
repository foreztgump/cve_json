{
    "id": "CVE-2025-38282",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:kernfs: Relax constraint in draining guardThe active reference lifecycle provides the break/unbreak mechanism butthe active reference is not truly active after unbreak -- callers don'tuse it afterwards but it's important for proper pairing of kn->activecounting. Assuming this mechanism is in place, the WARN check inkernfs_should_drain_open_files() is too sensitive -- it may transientlycatch those (rightful) callers betweenkernfs_unbreak_active_protection() and kernfs_put_active() as found out by ChenRidong:\tkernfs_remove_by_name_ns\tkernfs_get_active // active=1\t__kernfs_remove\t\t\t\t\t  // active=0x80000002\tkernfs_drain\t\t\t...\twait_event\t//waiting (active == 0x80000001)\t\t\t\t\tkernfs_break_active_protection\t\t\t\t\t// active = 0x80000001\t// continue\t\t\t\t\tkernfs_unbreak_active_protection\t\t\t\t\t// active = 0x80000002\t...\tkernfs_should_drain_open_files\t// warning occurs\t\t\t\t\tkernfs_put_activeTo avoid the false positives (mind panic_on_warn) remove the check altogether.(This is meant as quick fix, I think active reference break/unbreak may besimplified with larger rework.)",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}