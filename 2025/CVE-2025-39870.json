{
    "id": "CVE-2025-39870",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:dmaengine: idxd: Fix double free in idxd_setup_wqs()The clean up in idxd_setup_wqs() has had a couple bugs because the errorhandling is a bit subtle.  It's simpler to just re-write it in a cleanerway.  The issues here are:1) If \"idxd->max_wqs\" is <= 0 then we call put_device(conf_dev) when   \"conf_dev\" hasn't been initialized.2) If kzalloc_node() fails then again \"conf_dev\" is invalid.  It's   either uninitialized or it points to the \"conf_dev\" from the   previous iteration so it leads to a double free.It's better to free partial loop iterations within the loop and thenthe unwinding at the end can handle whole loop iterations.  I alsorenamed the labels to describe what the goto does and not where the gotowas located.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}