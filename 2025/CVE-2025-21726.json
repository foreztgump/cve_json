{
    "id": "CVE-2025-21726",
    "product": "Linux",
    "version": "bbefa1dd6a6d53537c11624752219e39959d04fb< f4f1b1169fc3694f9bc3e28c6c68dbbf4cc744c0 ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:padata: avoid UAF for reorder_workAlthough the previous patch can avoid ps and ps UAF for _do_serial, itcan not avoid potential UAF issue for reorder_work. This issue canhappen just as below:crypto_request\t\t\tcrypto_request\t\tcrypto_del_algpadata_do_serial  ...  padata_reorder    // processes all remaining    // requests then breaks    while (1) {      if (!padata)        break;      ...    }\t\t\t\tpadata_do_serial\t\t\t\t  // new request added\t\t\t\t  list_add    // sees the new request    queue_work(reorder_work)\t\t\t\t  padata_reorder\t\t\t\t    queue_work_on(squeue->work)...\t\t\t\t<kworker context>\t\t\t\tpadata_serial_worker\t\t\t\t// completes new request,\t\t\t\t// no more outstanding\t\t\t\t// requests\t\t\t\t\t\t\tcrypto_del_alg\t\t\t\t\t\t\t  // free pd<kworker context>invoke_padata_reorder  // UAF of pdTo avoid UAF for 'reorder_work', get 'pd' ref before put 'reorder_work'into the 'serial_wq' and put 'pd' ref until the 'serial_wq' finish.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/runwhen-contrib/helm-charts",
            "https://github.com/w4zu/Debian_security"
        ]
    }
}