{
    "id": "CVE-2025-39877",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:mm/damon/sysfs: fix use-after-free in state_show()state_show() reads kdamond->damon_ctx without holding damon_sysfs_lock. This allows a use-after-free race:CPU 0                         CPU 1-----                         -----state_show()                  damon_sysfs_turn_damon_on()ctx = kdamond->damon_ctx;     mutex_lock(&damon_sysfs_lock);                              damon_destroy_ctx(kdamond->damon_ctx);                              kdamond->damon_ctx = NULL;                              mutex_unlock(&damon_sysfs_lock);damon_is_running(ctx);        /* ctx is freed */mutex_lock(&ctx->kdamond_lock); /* UAF */(The race can also occur with damon_sysfs_kdamonds_rm_dirs() anddamon_sysfs_kdamond_release(), which free or replace the context underdamon_sysfs_lock.)Fix by taking damon_sysfs_lock before dereferencing the context, mirroringthe locking used in pid_show().The bug has existed since state_show() first accessed kdamond->damon_ctx.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}