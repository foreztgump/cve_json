{
    "id": "CVE-2025-39941",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:zram: fix slot write race conditionParallel concurrent writes to the same zram index result in leakedzsmalloc handles.  Schematically we can have something like this:CPU0                              CPU1zram_slot_lock()zs_free(handle)zram_slot_lock()\t\t\t\tzram_slot_lock()\t\t\t\tzs_free(handle)\t\t\t\tzram_slot_lock()compress\t\t\tcompresshandle = zs_malloc()\t\thandle = zs_malloc()zram_slot_lockzram_set_handle(handle)zram_slot_lock\t\t\t\tzram_slot_lock\t\t\t\tzram_set_handle(handle)\t\t\t\tzram_slot_lockEither CPU0 or CPU1 zsmalloc handle will leak because zs_free() is donetoo early.  In fact, we need to reset zram entry right before we set itsnew handle, all under the same slot lock scope.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/fkie-cad/nvd-json-data-feeds"
        ]
    }
}