{
    "id": "CVE-2025-22045",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:x86/mm: Fix flush_tlb_range() when used for zapping normal PMDsOn the following path, flush_tlb_range() can be used for zapping normalPMD entries (PMD entries that point to page tables) together with the PTEentries in the pointed-to page table:    collapse_pte_mapped_thp      pmdp_collapse_flush        flush_tlb_rangeThe arm64 version of flush_tlb_range() has a comment describing that it canbe used for page table removal, and does not use any last-levelinvalidation optimizations. Fix the X86 version by making it behave thesame way.Currently, X86 only uses this information for the following two purposes,which I think means the issue doesn't have much impact: - In native_flush_tlb_multi() for checking if lazy TLB CPUs need to be   IPI'd to avoid issues with speculative page table walks. - In Hyper-V TLB paravirtualization, again for lazy TLB stuff.The patch \"x86/mm: only invalidate final translations with INVLPGB\" whichis currently under review (see<https://lore.kernel.org/all/20241230175550.4046587-13-riel@surriel.com/>)would probably be making the impact of this a lot worse.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}