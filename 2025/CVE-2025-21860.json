{
    "id": "CVE-2025-21860",
    "product": "Linux",
    "version": "b7c0ccdfbafdec98699ddb6f164beebf16f0bc45< a3652f5552b20903315612da487a7be2b95394d5 ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:mm/zswap: fix inconsistency when zswap_store_page() failsCommit b7c0ccdfbafd (\"mm: zswap: support large folios in zswap_store()\")skips charging any zswap entries when it failed to zswap the entire folio.However, when some base pages are zswapped but it failed to zswap theentire folio, the zswap operation is rolled back.  When freeing zswapentries for those pages, zswap_entry_free() uncharges the zswap entriesthat were not previously charged, causing zswap charging to becomeinconsistent.This inconsistency triggers two warnings with following steps:  # On a machine with 64GiB of RAM and 36GiB of zswap  $ stress-ng --bigheap 2 # wait until the OOM-killer kills stress-ng  $ sudo reboot  The two warnings are:    in mm/memcontrol.c:163, function obj_cgroup_release():      WARN_ON_ONCE(nr_bytes & (PAGE_SIZE - 1));    in mm/page_counter.c:60, function page_counter_cancel():      if (WARN_ONCE(new < 0, \"page_counter underflow: %ld nr_pages=%lu\\n\",\t  new, nr_pages))zswap_stored_pages also becomes inconsistent in the same way.As suggested by Kanchana, increment zswap_stored_pages and charge zswapentries within zswap_store_page() when it succeeds.  This way,zswap_entry_free() will decrement the counter and uncharge the entrieswhen it failed to zswap the entire folio.While this could potentially be optimized by batching objcg charging andincrementing the counter, let's focus on fixing the bug this time andleave the optimization for later after some evaluation.After resolving the inconsistency, the warnings disappear.[42.hyeyoo@gmail.com: refactor zswap_store_page()]",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/fkie-cad/nvd-json-data-feeds"
        ]
    }
}