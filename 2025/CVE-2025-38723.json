{
    "id": "CVE-2025-38723",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:LoongArch: BPF: Fix jump offset calculation in tailcallThe extra pass of bpf_int_jit_compile() skips JIT context initializationwhich essentially skips offset calculation leaving out_offset = -1, sothe jmp_offset in emit_bpf_tail_call is calculated by\"#define jmp_offset (out_offset - (cur_offset))\"is a negative number, which is wrong. The final generated assembly areas follow.54:\tbgeu        \t$a2, $t1, -8\t    # 0x0000004c58:\taddi.d      \t$a6, $s5, -15c:\tbltz        \t$a6, -16\t    # 0x0000004c60:\talsl.d      \t$t2, $a2, $a1, 0x364:\tld.d        \t$t2, $t2, 26468:\tbeq         \t$t2, $zero, -28\t    # 0x0000004cBefore apply this patch, the follow test case will reveal soft lock issues.cd tools/testing/selftests/bpf/./test_progs --allow=tailcalls/tailcall_bpf2bpf_1dmesg:watchdog: BUG: soft lockup - CPU#2 stuck for 26s! [test_progs:25056]",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}