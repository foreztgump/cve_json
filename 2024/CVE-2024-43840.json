{
    "id": "CVE-2024-43840",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:bpf, arm64: Fix trampoline for BPF_TRAMP_F_CALL_ORIGWhen BPF_TRAMP_F_CALL_ORIG is set, the trampoline calls__bpf_tramp_enter() and __bpf_tramp_exit() functions, passing themthe struct bpf_tramp_image *im pointer as an argument in R0.The trampoline generation code uses emit_addr_mov_i64() to emitinstructions for moving the bpf_tramp_image address into R0, butemit_addr_mov_i64() assumes the address to be in the vmalloc() spaceand uses only 48 bits. Because bpf_tramp_image is allocated usingkzalloc(), its address can use more than 48-bits, in this case thetrampoline will pass an invalid address to __bpf_tramp_enter/exit()causing a kernel crash.Fix this by using emit_a64_mov_i64() in place of emit_addr_mov_i64()as it can work with addresses that are greater than 48-bits.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/fkie-cad/nvd-json-data-feeds",
            "https://github.com/w4zu/Debian_security"
        ]
    }
}