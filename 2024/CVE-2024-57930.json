{
    "id": "CVE-2024-57930",
    "product": "Linux",
    "version": "85d7635d54d75a2589f28583dc17feedc3aa4ad6< 3bcdc9039a6e9e6e47ed689a37b8d57894a3c571 ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:tracing: Have process_string() also allow arraysIn order to catch a common bug where a TRACE_EVENT() TP_fast_assign()assigns an address of an allocated string to the ring buffer and thenreferences it in TP_printk(), which can be executed hours later when thestring is free, the function test_event_printk() runs on all events asthey are registered to make sure there's no unwanted dereferencing.It calls process_string() to handle cases in TP_printk() format that has\"%s\". It returns whether or not the string is safe. But it can have somefalse positives.For instance, xe_bo_move() has: TP_printk(\"move_lacks_source:%s, migrate object %p [size %zu] from %s to %s device_id:%s\",            __entry->move_lacks_source ? \"yes\" : \"no\", __entry->bo, __entry->size,            xe_mem_type_to_name[__entry->old_placement],            xe_mem_type_to_name[__entry->new_placement], __get_str(device_id))Where the \"%s\" references into xe_mem_type_to_name[]. This is an array ofpointers that should be safe for the event to access. Instead of flaggingthis as a bad reference, if a reference points to an array, where therecord field is the index, consider it safe.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/fkie-cad/nvd-json-data-feeds"
        ]
    }
}