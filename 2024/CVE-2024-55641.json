{
    "id": "CVE-2024-55641",
    "product": "Linux",
    "version": "bd5562111d58392298a3c3b93caad71dff681b4b< 6aefe5d97ae57b1343dc60d8bb6a4ed070e5bcea ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:xfs: unlock inodes when erroring out of xfs_trans_alloc_dirDebugging a filesystem patch with generic/475 caused the system to hangafter observing the following sequences in dmesg: XFS (dm-0): metadata I/O error in \"xfs_imap_to_bp+0x61/0xe0 [xfs]\" at daddr 0x491520 len 32 error 5 XFS (dm-0): metadata I/O error in \"xfs_btree_read_buf_block+0xba/0x160 [xfs]\" at daddr 0x3445608 len 8 error 5 XFS (dm-0): metadata I/O error in \"xfs_imap_to_bp+0x61/0xe0 [xfs]\" at daddr 0x138e1c0 len 32 error 5 XFS (dm-0): log I/O error -5 XFS (dm-0): Metadata I/O Error (0x1) detected at xfs_trans_read_buf_map+0x1ea/0x4b0 [xfs] (fs/xfs/xfs_trans_buf.c:311).  Shutting down filesystem. XFS (dm-0): Please unmount the filesystem and rectify the problem(s) XFS (dm-0): Internal error dqp->q_ino.reserved < dqp->q_ino.count at line 869 of file fs/xfs/xfs_trans_dquot.c.  Caller xfs_trans_dqresv+0x236/0x440 [xfs] XFS (dm-0): Corruption detected. Unmount and run xfs_repair XFS (dm-0): Unmounting Filesystem be6bcbcc-9921-4deb-8d16-7cc94e335fa7The system is stuck in unmount trying to lock a couple of inodes so thatthey can be purged.  The dquot corruption notice above is a clue to whathappened -- a link() call tried to set up a transaction to link a childinto a directory.  Quota reservation for the transaction failed after IOerrors shut down the filesystem, but then we forgot to unlock the inodeson our way out.  Fix that.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/bygregonline/devsec-fastapi-report"
        ]
    }
}