{
    "id": "CVE-2024-39508",
    "product": "Linux",
    "version": "1da177e4c3f4< ab702c3483db ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:io_uring/io-wq: Use set_bit() and test_bit() at worker->flagsUtilize set_bit() and test_bit() on worker->flags within io_uring/io-wqto address potential data races.The structure io_worker->flags may be accessed through various datapaths, leading to concurrency issues. When KCSAN is enabled, it revealsdata races occurring in io_worker_handle_work andio_wq_activate_free_worker functions.\t BUG: KCSAN: data-race in io_worker_handle_work / io_wq_activate_free_worker\t write to 0xffff8885c4246404 of 4 bytes by task 49071 on cpu 28:\t io_worker_handle_work (io_uring/io-wq.c:434 io_uring/io-wq.c:569)\t io_wq_worker (io_uring/io-wq.c:?)<snip>\t read to 0xffff8885c4246404 of 4 bytes by task 49024 on cpu 5:\t io_wq_activate_free_worker (io_uring/io-wq.c:? io_uring/io-wq.c:285)\t io_wq_enqueue (io_uring/io-wq.c:947)\t io_queue_iowq (io_uring/io_uring.c:524)\t io_req_task_submit (io_uring/io_uring.c:1511)\t io_handle_tw_list (io_uring/io_uring.c:1198)<snip>Line numbers against commit 18daea77cca6 (\"Merge tag 'for-linus' ofgit://git.kernel.org/pub/scm/virt/kvm/kvm\").These races involve writes and reads to the same memory location bydifferent tasks running on different CPUs. To mitigate this, refactorthe code to use atomic operations such as set_bit(), test_bit(), andclear_bit() instead of basic \"and\" and \"or\" operations. This ensuresthread-safe manipulation of worker flags.Also, move `create_index` to avoid holes in the structure.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/bygregonline/devsec-fastapi-report",
            "https://github.com/robertsirc/sle-bci-demo"
        ]
    }
}