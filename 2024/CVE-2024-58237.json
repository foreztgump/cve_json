{
    "id": "CVE-2024-58237",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:bpf: consider that tail calls invalidate packet pointersTail-called programs could execute any of the helpers that invalidatepacket pointers. Hence, conservatively assume that each tail callinvalidates packet pointers.Making the change in bpf_helper_changes_pkt_data() automatically makesuse of check_cfg() logic that computes 'changes_pkt_data' effect forglobal sub-programs, such that the following program could berejected:    int tail_call(struct __sk_buff *sk)    {    \tbpf_tail_call_static(sk, &jmp_table, 0);    \treturn 0;    }    SEC(\"tc\")    int not_safe(struct __sk_buff *sk)    {    \tint *p = (void *)(long)sk->data;    \t... make p valid ...    \ttail_call(sk);    \t*p = 42; /* this is unsafe */    \t...    }The tc_bpf2bpf.c:subprog_tc() needs change: mark it as a function thatcan invalidate packet pointers. Otherwise, it can't be freplaced withtailcall_freplace.c:entry_freplace() that does a tail call.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/oogasawa/Utility-security"
        ]
    }
}