{
    "id": "CVE-2024-47699",
    "product": "Linux",
    "version": "17c76b0104e4< 2b78e9df10fb ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:nilfs2: fix potential null-ptr-deref in nilfs_btree_insert()Patch series \"nilfs2: fix potential issues with empty b-tree nodes\".This series addresses three potential issues with empty b-tree nodes thatcan occur with corrupted filesystem images, including one recentlydiscovered by syzbot.This patch (of 3):If a b-tree is broken on the device, and the b-tree height is greater than2 (the level of the root node is greater than 1) even if the number ofchild nodes of the b-tree root is 0, a NULL pointer dereference occurs innilfs_btree_prepare_insert(), which is called from nilfs_btree_insert().This is because, when the number of child nodes of the b-tree root is 0,nilfs_btree_do_lookup() does not set the block buffer head in any ofpath[x].bp_bh, leaving it as the initial value of NULL, but if the levelof the b-tree root node is greater than 1, nilfs_btree_get_nonroot_node(),which accesses the buffer memory of path[x].bp_bh, is called.Fix this issue by adding a check to nilfs_btree_root_broken(), whichperforms sanity checks when reading the root node from the device, todetect this inconsistency.Thanks to Lizhi Xu for trying to solve the bug and clarifying the causeearly on.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}