{
    "id": "CVE-2024-53233",
    "product": "Linux",
    "version": "2b3d047870120bcd46d7cc257d19ff49328fd585< 4387cef540f36c2c9297460758cc2438305a24a0 ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:unicode: Fix utf8_load() error pathutf8_load() requests the symbol \"utf8_data_table\" and then checks if therequested UTF-8 version is supported. If it's unsupported, it tries toput the data table using symbol_put(). If an unsupported version isrequested, symbol_put() fails like this: kernel BUG at kernel/module/main.c:786! RIP: 0010:__symbol_put+0x93/0xb0 Call Trace:  <TASK>  ? __die_body.cold+0x19/0x27  ? die+0x2e/0x50  ? do_trap+0xca/0x110  ? do_error_trap+0x65/0x80  ? __symbol_put+0x93/0xb0  ? exc_invalid_op+0x51/0x70  ? __symbol_put+0x93/0xb0  ? asm_exc_invalid_op+0x1a/0x20  ? __pfx_cmp_name+0x10/0x10  ? __symbol_put+0x93/0xb0  ? __symbol_put+0x62/0xb0  utf8_load+0xf8/0x150That happens because symbol_put() expects the unique string thatidentify the symbol, instead of a pointer to the loaded symbol. Fix thatby using such string.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/w4zu/Debian_security"
        ]
    }
}