{
    "id": "CVE-2024-36013",
    "product": "Linux",
    "version": "73ffa904b782< cfe560c7050b ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:Bluetooth: L2CAP: Fix slab-use-after-free in l2cap_connect()Extend a critical section to prevent chan from early freeing.Also make the l2cap_connect() return type void. Nothing is using thereturned value but it is ugly to return a potentially freed pointer.Making it void will help with backports because earlier kernels did usethe return value. Now the compile will break for kernels where thispatch is not a complete fix.Call stack summary:[use]l2cap_bredr_sig_cmd  l2cap_connect  \u250c mutex_lock(&conn->chan_lock);  \u2502 chan = pchan->ops->new_connection(pchan); <- alloc chan  \u2502 __l2cap_chan_add(conn, chan);  \u2502   l2cap_chan_hold(chan);  \u2502   list_add(&chan->list, &conn->chan_l);   ... (1)  \u2514 mutex_unlock(&conn->chan_lock);    chan->conf_state              ... (4) <- use after free[free]l2cap_conn_del\u250c mutex_lock(&conn->chan_lock);\u2502 foreach chan in conn->chan_l:            ... (2)\u2502   l2cap_chan_put(chan);\u2502     l2cap_chan_destroy\u2502       kfree(chan)               ... (3) <- chan freed\u2514 mutex_unlock(&conn->chan_lock);==================================================================BUG: KASAN: slab-use-after-free in instrument_atomic_readinclude/linux/instrumented.h:68 [inline]BUG: KASAN: slab-use-after-free in _test_bitinclude/asm-generic/bitops/instrumented-non-atomic.h:141 [inline]BUG: KASAN: slab-use-after-free in l2cap_connect+0xa67/0x11a0net/bluetooth/l2cap_core.c:4260Read of size 8 at addr ffff88810bf040a0 by task kworker/u3:1/311",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/fkie-cad/nvd-json-data-feeds"
        ]
    }
}