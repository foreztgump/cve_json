{
    "id": "CVE-2022-48806",
    "product": "Linux",
    "version": "aca56c298e2a< 3937c35493ee ",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:eeprom: ee1004: limit i2c reads to I2C_SMBUS_BLOCK_MAXCommit effa453168a7 (\"i2c: i801: Don't silently correct invalid transfersize\") revealed that ee1004_eeprom_read() did not properly limit howmany bytes to read at once.In particular, i2c_smbus_read_i2c_block_data_or_emulated() takes thelength to read as an u8.  If count == 256 after taking into account theoffset and page boundary, the cast to u8 overflows.  And this is commonwhen user space tries to read the entire EEPROM at once.To fix it, limit each read to I2C_SMBUS_BLOCK_MAX (32) bytes, alreadythe maximum length i2c_smbus_read_i2c_block_data_or_emulated() allows.",
    "poc": {
        "reference": [
            "https://git.kernel.org/stable/c/9443ddeb3754e9e382a396b50adc1961301713ce"
        ],
        "github": [
            "No PoCs found on GitHub currently."
        ]
    }
}