{
    "id": "CVE-2023-53608",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:nilfs2: fix potential UAF of struct nilfs_sc_info in nilfs_segctor_thread()The finalization of nilfs_segctor_thread() can race withnilfs_segctor_kill_thread() which terminates that thread, potentiallycausing a use-after-free BUG as KASAN detected.At the end of nilfs_segctor_thread(), it assigns NULL to \"sc_task\" memberof \"struct nilfs_sc_info\" to indicate the thread has finished, and thennotifies nilfs_segctor_kill_thread() of this using waitqueue\"sc_wait_task\" on the struct nilfs_sc_info.However, here, immediately after the NULL assignment to \"sc_task\", it ispossible that nilfs_segctor_kill_thread() will detect it and return tocontinue the deallocation, freeing the nilfs_sc_info structure before thethread does the notification.This fixes the issue by protecting the NULL assignment to \"sc_task\" andits notification, with spinlock \"sc_state_lock\" of the structnilfs_sc_info.  Since nilfs_segctor_kill_thread() does a final check tosee if \"sc_task\" is NULL with \"sc_state_lock\" locked, this can eliminatethe race.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/fkie-cad/nvd-json-data-feeds"
        ]
    }
}