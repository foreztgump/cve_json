{
    "id": "CVE-2023-53260",
    "product": "Linux",
    "version": "",
    "vulnerability": [
        "n/a"
    ],
    "description": "In the Linux kernel, the following vulnerability has been resolved:ovl: fix null pointer dereference in ovl_permission()Following process:          P1                     P2 path_lookupat  link_path_walk   inode_permission    ovl_permission      ovl_i_path_real(inode, &realpath)        path->dentry = ovl_i_dentry_upper(inode)                          drop_cache\t\t\t   __dentry_kill(ovl_dentry)\t\t            iput(ovl_inode)\t\t             ovl_destroy_inode(ovl_inode)\t\t              dput(oi->__upperdentry)\t\t               dentry_kill(upperdentry)\t\t                dentry_unlink_inode\t\t\t\t upperdentry->d_inode = NULL      realinode = d_inode(realpath.dentry) // return NULL      inode_permission(realinode)       inode->i_sb  // NULL pointer dereference, will trigger an null pointer dereference at realinode:  [  335.664979] BUG: kernel NULL pointer dereference,                 address: 0000000000000002  [  335.668032] CPU: 0 PID: 2592 Comm: ls Not tainted 6.3.0  [  335.669956] RIP: 0010:inode_permission+0x33/0x2c0  [  335.678939] Call Trace:  [  335.679165]  <TASK>  [  335.679371]  ovl_permission+0xde/0x320  [  335.679723]  inode_permission+0x15e/0x2c0  [  335.680090]  link_path_walk+0x115/0x550  [  335.680771]  path_lookupat.isra.0+0xb2/0x200  [  335.681170]  filename_lookup+0xda/0x240  [  335.681922]  vfs_statx+0xa6/0x1f0  [  335.682233]  vfs_fstatat+0x7b/0xb0Fetch a reproducer in [Link].Use the helper ovl_i_path_realinode() to get realinode and then donon-nullptr checking.",
    "poc": {
        "reference": [
            "No PoCs from references."
        ],
        "github": [
            "https://github.com/fkie-cad/nvd-json-data-feeds"
        ]
    }
}